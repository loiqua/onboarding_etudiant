openapi: 3.0.3
info:
  title: HEI ADMIN
  description: API pour gérer les informations d'onboarding des étudiants de chez HEI
  version: 1.0.0
servers:
  - url: https://hei-api-onboarding-etudiant.com
tags:
  - name: student
    description: Opérations liées aux étudiants
  - name: teacher
    description: Opérations liées aux professeurs

paths:
  /student:
    post:
      tags:
        - student
      summary: Ajouter un nouvel étudiant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
                email:
                  type: string
                date_de_naissance:
                  type: string
                programme_d_etude:
                  type: string
                groupe:
                  type: string
                  enum: [H1, H2, H3, H4]
              example:
                nom: nouveau nom
                prenom: nouveau prenom
                email: hei.nom@gmail.com
                date_de_naissance: ....
                programme_d_etude: L1 HEI
                groupe: H1
      responses:
        "201":
          description: Création réussie
          content:
            application/json:
              example:
                message: Étudiant créé avec succès
                reference: STD22002
        "400":
          description: Requête invalide

  /student/{reference}:
    get:
      tags:
        - student
      summary: Obtenir les informations d'un étudiant par référence
      parameters:
        - name: reference
          in: path
          description: Référence de l'étudiant
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Succès de la requête
          content:
            application/json:
              example:
                nom: ANDRIAMAHALY ARINAINA
                prenom: Barthélemy Loiqua
                reference: STD22001
                email: hei.loiqua@gmail.com
                date_de_naissance: 5 juillet 2004
                programme_d_etude: L1 HEI
                groupe: H4
        "404":
          description: Étudiant non trouvé

    delete:
      tags:
        - student
      summary: Supprimer les informations d'un étudiant par référence
      parameters:
        - name: reference
          in: path
          description: Référence de l'étudiant
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Suppression réussie
        "404":
          description: Étudiant non trouvé
    put:
      tags:
        - student
      summary: Mettre à jour les informations d'un étudiant par référence
      parameters:
        - name: reference
          in: path
          description: Référence de l'étudiant
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
                email:
                  type: string
                date_de_naissance:
                  type: string
                programme_d_etude:
                  type: string
                groupe:
                  type: string
                  enum: [H1, H2, H3, H4]
              example:
                nom: nouveau nom
                prenom: nouveau prenom
                email: hei.nom@gmail.com
                date_de_naissance: 5 janvier 2003
                programme_d_etude: L1 HEI
                groupe: H3
      responses:
        "200":
          description: Mise à jour réussie
        "404":
          description: Étudiant non trouvé

  /teacher:
    post:
      tags:
        - teacher
      summary: Ajouter un nouveau professeur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
                email:
                  type: string
                matieres:
                  type: array
                  items:
                    type: object
                    properties:
                      Nom_matiere:
                        type: string
                      code_matiere:
                        type: string
              example:
                nom: nouveau nom
                prenom: nouveau prenom
                email: nom.hei@gmail.com
                matieres:
                  - Nom_matiere: mathematique
                    code_matiere: THEORIE1
      responses:
        "201":
          description: Création réussie
          content:
            application/json:
              example:
                message: Professeur créé avec succès
        "400":
          description: Requête invalide

  /teacher/{code_matiere}:
    get:
      tags:
        - teacher
      summary: Obtenir les informations d'un professeur par code de matière
      parameters:
        - name: code_matiere
          in: path
          description: Code de la matière enseignée
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Succès de la requête
          content:
            application/json:
              example:
                nom: TOKIMAHERY
                prenom: RAMAROZAKA
                email: toky.hei@gmail.com
                matieres:
                  - Nom_matiere: algorithme
                    code_matiere: PROG1
                  - Nom_matiere: web
                    code_matiere: WEB1
                  # ... (other courses)
        "404":
          description: Professeur non trouvé

    put:
      tags:
        - teacher
      summary: Mettre à jour les informations d'un professeur par code de matière
      parameters:
        - name: code_matiere
          in: path
          description: Code de la matière enseignée
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
                email:
                  type: string
                matieres:
                  type: array
                  items:
                    type: object
                    properties:
                      Nom_matiere:
                        type: string
                      code_matiere:
                        type: string
              example:
                nom: Lou
                prenom: Andria
                email: lou.hei@gmail.com
                matieres:
                  - Nom_matiere: systeme d exploitation
                    code_matiere: SYS2
      responses:
        "200":
          description: Mise à jour réussie
        "404":
          description: Professeur non trouvé

    delete:
      tags:
        - teacher
      summary: Supprimer les informations d'un professeur par code de matière
      parameters:
        - name: code_matiere
          in: path
          description: Code de la matière enseignée
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Suppression réussie
        "404":
          description: Professeur non trouvé

  /teachers: # New endpoint added
    get:
      tags:
        - teacher
      summary: Obtenir la liste de tous les professeurs
      responses:
        "200":
          description: Succès de la requête
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherOutput"
              example:
                - nom: TOKIMAHERY
                  prenom: RAMAROZAKA
                  email: toky.hei@gmail.com
                  matieres:
                    - Nom_matiere: algorithme
                      code_matiere: PROG1
                      jours_heures:
                        - jour: Lundi
                          debut: "08:00"
                          fin: "10:00"
                    - Nom_matiere: web
                      code_matiere: WEB1
                      jours_heures:
                        - jour: Mercredi
                          debut: "14:00"
                          fin: "16:00"
                    - Nom_matiere: base de donnée
                      code_matiere: DONNEE1
                      jours_heures:
                        - jour: Vendredi
                          debut: "14:00"
                          fin: "16:00"

                - nom: Lou
                  prenom: Andria
                  email: lou.hei@gmail.com
                  matieres:
                    - Nom_matiere: systeme d exploitation
                      code_matiere: SYS2
                      jours_heures:
                        - jour: Vendredi
                          debut: "13:00"
                          fin: "14:00"

                - nom: Sandrine
                  prenom: Ramaroson
                  email: sandrine.hei@gmail.com
                  matieres:
                    - Nom_matiere: gestion de projets
                      code_matiere: MGT1
                      jours_heures:
                        - jour: Samedi
                          debut: "10:00"
                          fin: "12:00"

        "404":
          description: Aucun professeur trouvé

components:
  schemas:
    StudentInput:
      type: object
      properties:
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        date_de_naissance:
          type: string
        programme_d_etude:
          type: string
        groupe:
          type: string
          enum: [H1, H2, H3, H4]

    StudentOutput:
      type: object
      properties:
        nom:
          type: string
        prenom:
          type: string
        reference:
          type: string
        email:
          type: string
        date_de_naissance:
          type: string
        programme_d_etude:
          type: string
        groupe:
          type: string

    TeacherInput:
      type: object
      properties:
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        matieres:
          type: array
          items:
            type: object
            properties:
              Nom_matiere:
                type: string
              code_matiere:
                type: string

    TeacherOutput:
      type: object
      properties:
        nom:
          type: string
        prenom:
          type: string
        email:
          type: string
        matieres:
          type: array
          items:
            type: object
            properties:
              Nom_matiere:
                type: string
              code_matiere:
                type: string
              jours_heures:
                type: array
                items:
                  type: object
                  properties:
                    jour:
                      type: string
                    debut:
                      type: string
                    fin:
                      type: string
